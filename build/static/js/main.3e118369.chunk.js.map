{"version":3,"sources":["components/movie/movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","propss","url_img","useState","ite","setIte","itez","addItez","className","items","map","item","onClick","src","poster_path","original_title","title","class","release_date","overview","App","setItems","useEffect","fetch","then","res","json","result","results","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAwDeA,MApDf,SAAeC,GACb,IAAMC,EAAU,mCADK,EAECC,mBAAS,IAFV,mBAEdC,EAFc,KAETC,EAFS,OAGGF,oBAAS,GAHZ,mBAGdG,EAHc,KAGRC,EAHQ,KAKrB,OAAGD,EAEC,qBAAKE,UAAU,YAAf,SACEP,EAAOQ,MAAMC,KAAI,SAAAC,GAAI,OACpB,gCACE,8BACE,wBAAQH,UAAU,eAAgBI,QAAS,WAAKP,EAAOM,GAAMJ,GAAQ,IAArE,SACE,qBAAKC,UAAU,QAAQK,IAAKX,EAAUS,EAAKG,kBAG/C,qBAAKN,UAAU,aAAf,SACCG,EAAKI,mBAPEJ,EAAKK,YAelB,mCACA,sBAAKR,UAAU,oBAAf,UACA,wBAAQA,UAAU,eAAeI,QAAS,WAAKL,GAAQ,IAAvD,SAA+D,mBAAGU,MAAM,iBACtE,sBAAKT,UAAU,mBAAf,UACE,8BACA,qBAAKA,UAAU,eAAeK,IAAKX,EAAUE,EAAIU,gBAEjD,qBAAKN,UAAU,sBAAf,SACE,gCACE,qBAAKA,UAAU,oBAAf,SACCJ,EAAIW,iBAEL,mBAAGP,UAAU,oBAAb,SACCJ,EAAIc,oBAIP,qBAAKV,UAAU,qBAAf,SACGJ,EAAIe,oBCpBJC,MAtBf,WAAgB,IAAD,EACajB,mBAAS,IADtB,mBACNM,EADM,KACCY,EADD,KAab,OAVAC,qBAAU,WACRC,MAAM,6FACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCN,EAASM,EAAOC,SAChBC,QAAQC,IAAIH,EAAOC,cAGzB,IAEA,mCACA,cAAC,EAAD,CACAnB,MAAOA,OCRIsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3e118369.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\r\nimport React, {useState} from 'react';\r\nimport './movie.css';\r\n\r\nfunction Movie(propss) {\r\n  const url_img = 'https://image.tmdb.org/t/p/w500/';\r\n  const [ite, setIte] = useState([]);\r\n  const [itez, addItez] = useState(true);\r\n\r\n  if(itez){\r\n    return (\r\n      <div className=\"container\">\r\n       {propss.items.map(item => (\r\n         <div key={item.title}>\r\n           <div>\r\n             <button className=\"button-photo\"  onClick={()=>{setIte(item);addItez(false)}}>\r\n               <img className=\"photo\" src={url_img + item.poster_path} />\r\n             </button>\r\n           </div>\r\n           <div className=\"text-title\">\r\n           {item.original_title}\r\n           </div>\r\n         </div>\r\n       ))}\r\n      </div>\r\n   );\r\n  }else{\r\n    return(\r\n      <>\r\n      <div className=\"container-content\">\r\n      <button className=\"buttton-back\" onClick={()=>{addItez(true)}}><i class=\"arrow left\"></i></button>\r\n        <div className=\"container-revers\">\r\n          <div>\r\n          <img className=\"photo-revers\" src={url_img + ite.poster_path} />\r\n          </div>\r\n          <div className=\"content-text-revers\">\r\n            <div>\r\n              <div className=\"text-title-revers\">\r\n              {ite.original_title}\r\n              </div>\r\n              <p className=\"text-title-revers\">\r\n              {ite.release_date}\r\n              </p>\r\n            </div>\r\n          </div>\r\n            <div className=\"text-title-revers2\">\r\n              {ite.overview}\r\n            </div>\r\n          </div>\r\n        </div>\r\n     </>\r\n   )\r\n  }\r\n}\r\n  \r\n\r\nexport default Movie;","import React, { useEffect, useState} from 'react';\nimport './App.css';\nimport Movie from './components/movie/movie'\n\nfunction App() {\n  const [items, setItems] = useState([]);\n      \n  useEffect(() => {\n    fetch(\"https://api.themoviedb.org/3/trending/movie/week?api_key=ec8f1fa5fa44c55bd1269601d973b3fa\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setItems(result.results);\n          console.log(result.results)\n        }\n      )\n  },[])\n  return (\n    <>\n    <Movie \n    items={items}\n    />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}